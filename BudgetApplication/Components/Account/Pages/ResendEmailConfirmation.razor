@page "/Account/ResendEmailConfirmation"

@using System.ComponentModel.DataAnnotations
@using System.Text
@using System.Text.Encodings.Web
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using Budget_Application.Data

@inject UserManager<ApplicationUser> UserManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Resend email confirmation</PageTitle>

<div class="flex justify-center items-center sm:min-h-screen overflow-auto mt-6 sm:mt-0">
    <div class="w-80 bg-zinc-800 inset-ring inset-ring-gray-700/50 rounded-lg shadow-lg p-6 flex flex-col gap-4 justify-center items-center text-white">
        <h1 class="font-semibold text-2xl">Resend email confirmation</h1>
        
        <div class="w-full">
            @if (!string.IsNullOrEmpty(message))
            {
                <div class="rounded-lg px-3 py-2 bg-red-500/50 inset-ring inset-ring-red-500 mb-2">
                    <StatusMessage Message="@message"/>
                </div>    
            }
            
            <EditForm Model="Input" FormName="resend-email-confirmation" OnValidSubmit="OnValidSubmitAsync" method="post">
                <DataAnnotationsValidator/>
                <h2 class="text-lg font-medium mb-2">Enter your email</h2>
                <hr class="border-zinc-600 mb-4"/>

                <div class="mb-4">
                    <label class="block mb-2 text-sm font-medium text-white">Email</label>
                    <InputText @bind-Value="Input.Email" 
                               placeholder="name@example.com" 
                               autocomplete="username" 
                               class="w-full px-3 py-2 text-sm bg-zinc-700 border border-zinc-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent text-white placeholder-zinc-400"/>
                    <ValidationMessage For="() => Input.Email" class="text-xs text-red-500 mt-2"/>
                </div>

                <button type="submit" class="w-full py-2 px-4 bg-blue-600 hover:bg-blue-700 rounded-md text-white font-medium transition-colors mt-2">
                    Resend
                </button>

                <div class="mt-4 text-center">
                    <p class="text-sm">
                        <a href="Account/Login" class="text-blue-400 hover:text-blue-300 hover:underline">Back to login</a>
                    </p>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    private string? message;

    [SupplyParameterFromForm] private InputModel Input { get; set; } = new();

    private async Task OnValidSubmitAsync()
    {
        var user = await UserManager.FindByEmailAsync(Input.Email!);
        if (user is null)
        {
            message = "Verification email sent. Please check your email.";
            return;
        }

        var userId = await UserManager.GetUserIdAsync(user);
        var code = await UserManager.GenerateEmailConfirmationTokenAsync(user);
        code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
        var callbackUrl = NavigationManager.GetUriWithQueryParameters(
            NavigationManager.ToAbsoluteUri("Account/ConfirmEmail").AbsoluteUri,
            new Dictionary<string, object?> { ["userId"] = userId, ["code"] = code });
        await EmailSender.SendConfirmationLinkAsync(user, Input.Email, HtmlEncoder.Default.Encode(callbackUrl));

        message = "Verification email sent. Please check your email.";
    }

    private sealed class InputModel
    {
        [Required] [EmailAddress] public string Email { get; set; } = "";
    }

}