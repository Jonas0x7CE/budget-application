@page "/Account/RegisterConfirmation"

@using System.Text
@using BudgetApplication.Components.Account
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using BudgetApplication.Data

@inject UserManager<ApplicationUser> UserManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject NavigationManager NavigationManager

<PageTitle>Register confirmation</PageTitle>

<div class="flex justify-center items-center sm:min-h-screen overflow-auto mt-6 sm:mt-0">
    <div class="w-80 bg-zinc-800 inset-ring inset-ring-gray-700/50 rounded-lg shadow-lg p-6 flex flex-col gap-4 justify-center items-center text-white">
        <h1 class="font-semibold text-2xl">Register confirmation</h1>
        
        <div class="w-full text-center">
            <div class="mb-4">
                <svg class="mx-auto h-12 w-12 text-blue-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                </svg>
            </div>
            
            @if (emailConfirmationLink is not null)
            {
                <p class="text-sm text-zinc-300 mb-4">
                    This app does not currently have a real email sender registered. Normally this would be used to send a confirmation link to your email.
                </p>
                <a href="@emailConfirmationLink" class="inline-block py-2 px-4 bg-blue-600 hover:bg-blue-700 rounded-md text-white font-medium transition-colors mb-4">
                    Click here to confirm your account
                </a>
            }
            else
            {
                <p class="text-sm text-zinc-300 mb-6">
                    Please check your email to confirm your account. If you don't see the email in your inbox, check your spam folder.
                </p>
            }
            
            <p class="text-sm">
                <a href="Account/Login" class="text-blue-400 hover:text-blue-300 hover:underline">Continue to login</a>
            </p>
        </div>
    </div>
</div>

<StatusMessage Message="@statusMessage"/>

@code {
    private string? emailConfirmationLink;
    private string? statusMessage;

    [CascadingParameter] private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromQuery] private string? Email { get; set; }

    [SupplyParameterFromQuery] private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Email is null)
        {
            NavigationManager.NavigateTo("");
        }

        var user = await UserManager.FindByEmailAsync(Email);
        if (user is null)
        {
            HttpContext.Response.StatusCode = StatusCodes.Status404NotFound;
            statusMessage = "Error finding user for unspecified email";
        }
        else if (EmailSender is IdentityNoOpEmailSender)
        {
            // Once you add a real email sender, you should remove this code that lets you confirm the account
            var userId = await UserManager.GetUserIdAsync(user);
            var code = await UserManager.GenerateEmailConfirmationTokenAsync(user);
            code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
            emailConfirmationLink = NavigationManager.GetUriWithQueryParameters(
                NavigationManager.ToAbsoluteUri("Account/ConfirmEmail").AbsoluteUri,
                new Dictionary<string, object?> { ["userId"] = userId, ["code"] = code, ["returnUrl"] = ReturnUrl });
        }
    }

}