@page "/Account/Manage"

@using System.ComponentModel.DataAnnotations
@using BudgetApplication.Components.Account
@using Microsoft.AspNetCore.Identity
@using BudgetApplication.Data

@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager

<PageTitle>Profile</PageTitle>

<div class="text-white">
    <h1 class="font-semibold text-xl mb-4">Profile</h1>
    
    <StatusMessage/>
    
    <EditForm Model="Input" FormName="profile" OnValidSubmit="OnValidSubmitAsync" method="post">
        <DataAnnotationsValidator/>
        <ValidationSummary class="text-xs text-red-500 mb-4" role="alert"/>

        <div class="mb-4">
            <label class="block mb-2 text-sm font-medium text-white">Username</label>
            <input type="text" 
                   value="@username" 
                   id="username" 
                   placeholder="Choose your username" 
                   disabled
                   class="w-full px-3 py-2 text-sm bg-zinc-600 border border-zinc-500 rounded-md text-zinc-300 cursor-not-allowed"/>
            <p class="text-xs text-zinc-400 mt-1">Username cannot be changed</p>
        </div>
        
        <div class="mb-4">
            <label class="block mb-2 text-sm font-medium text-white">Phone number</label>
            <InputText @bind-Value="Input.PhoneNumber" 
                       id="Input.PhoneNumber" 
                       placeholder="Enter your phone number"
                       class="w-full px-3 py-2 text-sm bg-zinc-800 border border-zinc-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent text-white placeholder-zinc-400"/>
            <ValidationMessage For="() => Input.PhoneNumber" class="text-xs text-red-500 mt-2"/>
        </div>

        <button type="submit" class="w-full py-2 px-4 bg-blue-600 hover:bg-blue-700 rounded-md text-white font-medium transition-colors mt-2">
            Save
        </button>
    </EditForm>
</div>

@code {
    private ApplicationUser user = default!;
    private string? username;
    private string? phoneNumber;

    [CascadingParameter] private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromForm] private InputModel Input { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        user = await UserAccessor.GetRequiredUserAsync(HttpContext);
        username = await UserManager.GetUserNameAsync(user);
        phoneNumber = await UserManager.GetPhoneNumberAsync(user);

        Input.PhoneNumber ??= phoneNumber;
    }

    private async Task OnValidSubmitAsync()
    {
        if (Input.PhoneNumber != phoneNumber)
        {
            var setPhoneResult = await UserManager.SetPhoneNumberAsync(user, Input.PhoneNumber);
            if (!setPhoneResult.Succeeded)
            {
                RedirectManager.RedirectToCurrentPageWithStatus("Error: Failed to set phone number.", HttpContext);
            }
        }

        await SignInManager.RefreshSignInAsync(user);
        RedirectManager.RedirectToCurrentPageWithStatus("Your profile has been updated", HttpContext);
    }

    private sealed class InputModel
    {
        [Phone]
        [Display(Name = "Phone number")]
        public string? PhoneNumber { get; set; }
    }

}