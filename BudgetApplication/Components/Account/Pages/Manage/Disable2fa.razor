@page "/Account/Manage/Disable2fa"

@using Microsoft.AspNetCore.Identity
@using Budget_Application.Data

@inject UserManager<ApplicationUser> UserManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager
@inject ILogger<Disable2fa> Logger

<PageTitle>Disable two-factor authentication (2FA)</PageTitle>

<div class="text-white">
    <h1 class="font-semibold text-xl mb-4">Disable two-factor authentication (2FA)</h1>
    
    <StatusMessage/>
    
    <div class="space-y-6">
        <div class="bg-yellow-500/10 border border-yellow-500/30 rounded-lg p-4">
            <div class="flex items-start">
                <svg class="w-5 h-5 text-yellow-400 mr-2 mt-0.5" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd"/>
                </svg>
                <div>
                    <p class="text-sm font-medium text-yellow-400">Warning</p>
                    <p class="text-sm text-yellow-300">
                        <strong>This action only disables 2FA.</strong> Disabling 2FA does not change the keys used in authenticator apps. 
                        If you wish to change the key used in an authenticator app you should 
                        <a href="Account/Manage/ResetAuthenticator" class="underline text-yellow-200 hover:text-yellow-100">reset your authenticator keys</a>.
                    </p>
                </div>
            </div>
        </div>

        <div class="bg-zinc-800 rounded-lg p-4 border border-zinc-600">
            <h2 class="text-lg font-medium mb-3">Disable 2FA</h2>
            <p class="text-sm text-zinc-300 mb-4">
                Disabling 2FA will reduce the security of your account. Are you sure you want to continue?
            </p>
            
            <EditForm Model="Input" FormName="disable-2fa" OnValidSubmit="OnSubmitAsync" method="post">
                <AntiforgeryToken/>
                <div class="flex space-x-3">
                    <a href="Account/Manage/TwoFactorAuthentication" class="flex-1 px-4 py-2 bg-zinc-600 hover:bg-zinc-500 rounded-md text-white font-medium transition-colors text-center">
                        Cancel
                    </a>
                    <button type="submit" class="flex-1 px-4 py-2 bg-red-600 hover:bg-red-700 rounded-md text-white font-medium transition-colors">
                        Disable 2FA
                    </button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    private ApplicationUser user = default!;

    [CascadingParameter] private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromForm] private InputModel Input { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        user = await UserAccessor.GetRequiredUserAsync(HttpContext);

        if (HttpMethods.IsGet(HttpContext.Request.Method) && !await UserManager.GetTwoFactorEnabledAsync(user))
        {
            throw new InvalidOperationException("Cannot disable 2FA for user as it's not currently enabled.");
        }
    }

    private async Task OnSubmitAsync()
    {
        var disable2faResult = await UserManager.SetTwoFactorEnabledAsync(user, false);
        if (!disable2faResult.Succeeded)
        {
            throw new InvalidOperationException("Unexpected error occurred disabling 2FA.");
        }

        var userId = await UserManager.GetUserIdAsync(user);
        Logger.LogInformation("User with ID '{UserId}' has disabled 2fa.", userId);
        RedirectManager.RedirectToWithStatus(
            "Account/Manage/TwoFactorAuthentication",
            "2fa has been disabled. You can reenable 2fa when you setup an authenticator app",
            HttpContext);
    }

    private sealed class InputModel
    {
    }
}